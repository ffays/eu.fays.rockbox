apply plugin: 'java'
apply plugin: 'eclipse'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
	jcenter()
}

dependencies {
	implementation 'javax.xml.bind:jaxb-api:2.3.1'	
	implementation 'org.jsoup:jsoup:1.13.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.apache.directory.studio:org.apache.commons.io:2.4'
	implementation 'org.apache.poi:poi-scratchpad:5.0.0'	
	implementation 'org.apache.commons:commons-lang3:3.12'
	implementation 'com.h2database:h2:1.4.200'
	implementation('net.sourceforge.htmlunit:htmlunit:2.49.1') { exclude module: 'xml-apis' }
	implementation('org.apache.poi:poi-ooxml:5.0.0') { exclude module: 'xml-apis' } 
	implementation 'org.eclipse.persistence:javax.persistence:2.2.1'
	// c.f. https://stackoverflow.com/questions/45870753/eclipselink-2-7-0-and-jpa-api-2-2-0-signature-mismatch
	implementation('org.eclipse.persistence:eclipselink:3.0.1') { exclude module: 'jakarta.persistence' }
	implementation 'com.opencsv:opencsv:5.4'

	
	implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy:3.0.1'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.ajoberstar:grgit:1.7.2'
    }
}

ext {
	def dateFormat = new java.text.SimpleDateFormat('yyyy-MM-dd')	 
	dateStamp = dateFormat.format(Calendar.getInstance().getTime())

	git = org.ajoberstar.grgit.Grgit.open(projectDir)
	gitIsClean = git.status().isClean()
	gitCommitHash = gitIsClean?git.head().id:''
	gitCommitterDate = gitIsClean?dateFormat.format(git.head().date):''
	gitAbbreviatedCommitHash = gitIsClean?git.head().abbreviatedId:''	
}

jar {
    manifest {
        attributes(
        	"Author": "Frederic Fays",
			"Git-Commiter-Date": project.ext.gitCommitterDate,
			"Git-Commit-Hash": project.ext.gitCommitHash,
			'Class-Path': configurations.runtimeClasspath.collect{ 'lib/' + it.getName() }.sort{ a,b -> b <=> a }.join(' '),
			'Main-Class': 'eu.fays.rockbox.jpa.MappingEssay'
		)
    }
    classifier project.ext.gitAbbreviatedCommitHash.isEmpty()?'devel':gitAbbreviatedCommitHash
    dependsOn 'copyLibs'
}


task copyLibs(type: Copy) {
	from sourceSets.main.compileClasspath
	into "${project.buildDir}/${project.libsDirName}/lib"
}
